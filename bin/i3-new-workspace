#!/usr/bin/env perl

# i3-new-workspace.pl --- open the next available empty workspace

# Copyright (c) 2024 Daniel Hennigar

# This program is free software; you can redistribute it and/or modify
# it under the terms of either:
#
#   a) the Artistic License 2.0, or
#   b) the GNU General Public License as published by the Free Software
#      Foundation; either version 3, or (at your option) any later version.
#
# See the LICENSE file for more information.

use 5.040;
use Carp;
use English      qw(-no_match_vars);
use Getopt::Long qw(:config auto_help auto_version);
use AnyEvent::I3;
use Data::Dumper;

our $VERSION = '0.01';
my $take = 0;

GetOptions( 'take' => \$take );

my $workspaces = i3->get_workspaces->recv
  or croak 'Could not get workspaces';

my %workspace_numbers;
foreach my $workspace ( @{$workspaces} ) {
    $workspace_numbers{ $workspace->{num} } = 1;
}

my $lowest_empty_workspace;
my $max_workspace_number = scalar @{$workspaces} + 1;
for my $i ( 1 .. $max_workspace_number ) {
    if ( not exists $workspace_numbers{$i} ) {
        $lowest_empty_workspace = $i;
        last;
    }
}
if ( !defined $lowest_empty_workspace ) {
    croak 'Could not find lowest workspace.';
}

my $cmd = ( $take ? "move to workspace $lowest_empty_workspace; " : q() )
  . "workspace $lowest_empty_workspace";

i3->command("$cmd") or croak 'Could not send i3 command';

__END__

=pod

=head1 NAME

i3-new-workspace - Switch to the lowest empty workspace in i3/sway

=head1 SYNOPSIS

    i3-new-workspace [--take] [--help]

=head1 DESCRIPTION

Find the lowest numbered empty workspace and switch to it. Optionally, take the
currently focused window with you to that workspace (see OPTIONS).

=head1 OPTIONS

=over 4

=item B<--help>

Print usage information

=item B<--take>

Bring the current currently focused window with you to the new workspace

=back

=head1 AUTHOR

Daniel Hennigar <danrhennigar@gmail.com>

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2025 Daniel Hennigar

Licensed under the Artistic License 2.0 and GNU GPL.

=cut
